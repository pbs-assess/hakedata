## Extract catch for Hake
## Assumes catch in area 4B which is not licenced as GULF or OPT B
##  is being caught in minor areas 12 or 20. The minor area codes in FOS are all 99
##  for these (unknown).

rm(list=ls(all=TRUE))

## lubridate provides simple date commands such as year(), month(), day()
require(lubridate)
## sqldf provides the sqldf function which runs an SQL query (left outer join)
require(sqldf)

## Conversion factor since FOS records catch in pounds
POUNDS.TO.KILOS   <- 2.20462262
## Freezer trawler Vessel IDs
VIKING.ENTERPRISE <- 310913
NORTHERN.ALLIANCE <- 312275
OSPREY.NO.1       <- 310988
RAW.SPIRIT        <- 312405

## Read in the files generated by the FOS website.
## The first line of the landings report is a header which will be ignored (skip=1)
data <- read.csv("LandingsSpeciesDateDMP.csv", skip = 1, header = TRUE, stringsAsFactors = FALSE)

files <- list.files(getwd())
files <- files[grep("LogCatchReport", files)]
tables <- lapply(files, read.csv, header = TRUE, stringsAsFactors = FALSE, skip = 7)
logs.data <- do.call(rbind, tables)

## Strip the time off the LANDING.DATE field and convert to Date object
data$LANDING.DATE <- gsub(" 00:00","",data$LANDING.DATE)
data$LANDING.DATE <- as.Date(data$LANDING.DATE, "%B %d %Y")
logs.data$LANDING.DATE <- as.Date(logs.data$LANDING.DATE, "%B %d %Y")

## Add year, month, and day to the data frame to simplify code later
## DMP
year <- year(data$LANDING.DATE)
month <- month(data$LANDING.DATE)
day <- day(data$LANDING.DATE)
data <- cbind(data, year, month, day)
## LOGS
year <- year(logs.data$LANDING.DATE)
month <- month(logs.data$LANDING.DATE)
day <- day(logs.data$LANDING.DATE)
logs.data <- cbind(logs.data, year, month, day)

calc.landings <- function(df, fishery){
  ## Sum and count the landings in the given data frame df by aggregating
  ## by years and months. Assumes the catch weight is in pounds
  ## and converts the sum to kilograms.
  ## Returns a data frame with the following five columns:
  ## Fishery, Year, Month, weightKg, numLandings
  ## Where Fishery will be the same for all records (fishery string)

  ## Remove the unneeded fields to prep for aggregation
  d <- as.data.frame(cbind(df$year, df$month, df$CONVERTED.WGHT.LBS.))
  if(nrow(d) == 0){
    return(NULL)
  }
  ## Aggregate the data frame by year and month, summing landings
  dsum <- aggregate(d[,3], by=list(d[,1], d[,2]), FUN=sum)
  ## Sort the data table by year and month, ascending
  dsum <- dsum[order(dsum[,1],dsum[,2]),]
  ## Convert all weights
  dsum[,3] <- dsum[,3] / POUNDS.TO.KILOS

  ## Aggregate the data frame by year and month, counting landings
  dcount <- aggregate(d[,3], by=list(d[,1], d[,2]), FUN=length)
  ## Sort the data table by year and month, ascending
  dcount <- dcount[order(dcount[,1],dcount[,2]),]

  ## Merge the two tables
  dboth <- cbind(dsum, dcount[,3])
  ## Add the field describing the fishery
  dboth <- cbind(rep(fishery, nrow(dboth)), dboth)
  colnames(dboth) <- c("Fishery", "Year", "Month", "weightKg", "numLandings")
  return(dboth)
}

calc.discards <- function(df, fishery){
  ## Sum and count the discards in the given data frame df by aggregating
  ## by years and months. Assumes the catch weight is in pounds
  ## and converts the sum to kilograms.
  ## Returns a data frame with the following five columns:
  ## Fishery, Year, Month, weightKg, numLandings
  ## Where Fishery will be the same for all records (fishery string)
  ## Remove the unneeded fields to prep for aggregation
  d <- as.data.frame(cbind(df$year, df$month, df$RELEASED.WT))
  if(nrow(d) == 0){
    return(NULL)
  }
  ## Aggregate the data frame by year and month, summing landings
  dsum <- aggregate(d[,3], by=list(d[,1], d[,2]), FUN=sum)
  ## Sort the data table by year and month, ascending
  dsum <- dsum[order(dsum[,1],dsum[,2]),]
  ## Convert all weights
  dsum[,3] <- dsum[,3] / POUNDS.TO.KILOS

  ## Add the field describing the fishery
  dsum <- cbind(rep(fishery, nrow(dsum)), dsum)
  colnames(dsum) <- c("Fishery", "Year", "Month", "weightKg")
  return(dsum)
}

## Remove any GULF and OPT B hake , which are Strait of Georgia landings
## NOTE: If there aren't any, the grep will return 0 and the data frame will become
##  empty!! This is why the if statements are there.
gulf <- grep("GULF", data$LICENCE.TRIP.TYPE)
if(length(gulf) > 0){
  data <- data[-gulf,]
}
logs.gulf <- grep("GULF", logs.data$TRIP.TYPE)
if(length(logs.gulf) > 0){
  logs.data <- logs.data[-logs.gulf,]
}

optb <- grep("OPT B", data$LICENCE.TRIP.TYPE)
if(length(optb) > 0){
  data <- data[-optb,]
}
logs.optb <- grep("OPT B", logs.data$TRIP.TYPE)
if(length(logs.optb) > 0){
  logs.data <- logs.data[-logs.optb,]
}

## Issue warning if any logs records show 4B
if(any(logs.data$AREA == "4B")){
  area.4b <- logs.data[logs.data$AREA == "4B",]
  cat0("Warning - Some of the LOGS landings are in the 4B area.\nThey ",
       "are stored in the variable area.4b for manual checking.\n",
       "The ones landed in French Creek were removed, and those landed\n",
       "before June in 4B, but you may want to remove some other records.\n")
  logs.data <- logs.data[logs.data$LANDING.PORT != "FRENCH CREEK",]
  logs.data <- logs.data[-(logs.data$AREA == "4B" &
                           month(logs.data$LANDING.DATE) < 6),]
}

## -----------------------------------------------------------------------------
## ft = FreezerTrawlers
## -----------------------------------------------------------------------------
ft <- data[data$VRN == VIKING.ENTERPRISE |
           data$VRN == NORTHERN.ALLIANCE |
           data$VRN == OSPREY.NO.1       |
           data$VRN == RAW.SPIRIT,]
logs.ft <- logs.data[logs.data$VRN == VIKING.ENTERPRISE |
                     logs.data$VRN == NORTHERN.ALLIANCE |
                     logs.data$VRN == OSPREY.NO.1       |
                     logs.data$VRN == RAW.SPIRIT,]

## In case the freezer trawlers were ever fishing the JV fishery, remove those
tmp <- grep("JV", ft$LICENCE.TRIP.TYPE)
if(length(tmp) > 0){
  ft <- ft[-grep("JV", ft$LICENCE.TRIP.TYPE),]
}
tmp <- grep("JV", logs.ft$TRIP.TYPE)
if(length(tmp) > 0){
  logs.ft <- logs.ft[-grep("JV", logs.ft$TRIP.TYPE),]
}

## Fetch At-sea-observer discard records for freezer trawlers
logs.ft <- logs.ft[logs.ft$SOURCE == "ASOP",]
logs.ft <- logs.ft[!is.na(logs.ft$RELEASED.WT),]

fta <- calc.landings(ft, "FreezerTrawler")
ftd <- calc.discards(logs.ft, "FreezerTrawler")

## -----------------------------------------------------------------------------
## ss = Shoreside
## -----------------------------------------------------------------------------
ss <- data[data$VRN != VIKING.ENTERPRISE &
           data$VRN != NORTHERN.ALLIANCE &
           data$VRN != OSPREY.NO.1 &
           data$VRN != RAW.SPIRIT,]
logs.ss <- logs.data[logs.data$VRN != VIKING.ENTERPRISE &
                     logs.data$VRN != NORTHERN.ALLIANCE &
                     logs.data$VRN != OSPREY.NO.1       &
                     logs.data$VRN != RAW.SPIRIT,]

## In case they were ever fishing the JV fishery, remove those
tmp <- grep("JV", ss$LICENCE.TRIP.TYPE)
if(length(tmp) > 0){
  ss <- ss[-grep("JV", ss$LICENCE.TRIP.TYPE),]
}
tmp <- grep("JV", logs.ss$TRIP.TYPE)
if(length(tmp) > 0){
  logs.ss <- logs.ss[-grep("JV", logs.ss$TRIP.TYPE),]
}

## Fetch At-sea-observer discard records for shoreside
logs.ss <- logs.ss[logs.ss$SOURCE == "ASOP",]
logs.ss <- logs.ss[!is.na(logs.ss$RELEASED.WT),]

ssa <- calc.landings(ss, "Shoreside")
ssd <- calc.discards(logs.ss, "Shoreside")

## -----------------------------------------------------------------------------
## jv = JointVenture
## -----------------------------------------------------------------------------
jv <- data[grep("JV", data$LICENCE.TRIP.TYPE),]
logs.jv <- logs.data[grep("JV", logs.data$TRIP.TYPE),]

## Fetch At-sea-observer discard records for JV
logs.jv <- logs.jv[logs.jv$SOURCE == "ASOP",]
logs.ss <- logs.jv[!is.na(logs.jv$RELEASED.WT),]

jva <- calc.landings(jv, "JV")
jvd <- calc.discards(logs.jv, "JV")

## Add the fleet landings and discards together by month

calc.weight <- function(landings, discards){
  if(is.null(landings) | is.null(discards)){
    return(NULL)
  }
  tmp <- sqldf("select * from landings left join discards using (Fishery, Year, Month)")
  tmp[is.na(tmp)] <- 0
  tmp[,4] <- tmp[,4] + tmp[,6]
  tmp <- tmp[,-6]
}

ft.tot <- calc.weight(fta, ftd)
ss.tot <- calc.weight(ssa, ssd)
jv.tot <- calc.weight(jva, jvd)

## Output data frame, which will have the five columns:
## Fishery, Year, Month, weightKg, numLandings
if(is.null(jv.tot)){
  out <- rbind(jv.tot, ss.tot, ft.tot)
}else{
  out <- rbind(jv.tot, ss.tot, ft.tot)
}
write.csv(out, "Landings_Fleet_Year_Month.csv", row.names=FALSE)
